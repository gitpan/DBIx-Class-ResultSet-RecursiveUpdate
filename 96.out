# * simple create + parent (the stuff $rs belongs_to)
ok 1 - Created CD object isa DBICTest::CD
ok 2 - Created related Artist isa DBICTest::Artist
ok 3 - Artist created correctly
# * same as above but the child and parent have no values, except for an explicit parent pk
finding object by id 66
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 4 - Created Bookrmark object isa DBICTest::Bookmark
ok 5 - Created related Link isa DBICTest::Link
ok 6 - Bookmark and link made it to the DB
# * Create m2m while originating in the linker table
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'cd', 'producer'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 46
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 7 - Linker object created isa DBICTest::CD_to_Producer
ok 8 - Producer row found isa DBICTest::Producer
ok 9 - Producer has one production
ok 10 - CD created correctly
ok 11 - CD has 3 tracks
# * Create over > 1 levels of might_have with multiple has_many and multiple m2m
# but starting at a has_many level
# 
# CD -> has_many -> Tracks -> might have -> Single -> has_many -> Tracks
#                                                \
#                                                 \-> has_many \
#                                                               --> CD2Producer
#                                                 /-> has_many /
#                                                /
#                                           Producer
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'producer'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 88
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 12 - Main CD object created isa DBICTest::CD
ok 13 - Correct CD title
ok 14 - Two tracks on main CD
ok 15 - Correct 1st track name
ok 16 - No single for 1st track
ok 17 - Correct 2nd track name
ok 18 - Created a single for 2nd track isa DBICTest::CD
ok 19 - Two tracks on single CD
ok 20 - Correct 1st track title
ok 21 - Correct 2nd track title
ok 22 - Two producers created for the single cd
ok 23 - Producers named correctly
# * Same as above but starting at the might_have directly
# 
# Track -> might have -> Single -> has_many -> Tracks
#                            \
#                             \-> has_many \
#                                           --> CD2Producer
#                             /-> has_many /
#                            /
#                        Producer
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'producer'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 162
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 24 - Main Track object created isa DBICTest::Track
ok 25 - Correct Track title
ok 26 - Created a single with the track isa DBICTest::CD
ok 27 - 3 tracks on single CD
ok 28 - Correct 1st track title
ok 29 - Correct 2nd track title
ok 30 - Correct 3rd track title
ok 31 - 3 producers created for the single cd
ok 32 - Producers named correctly
# * Test might_have again but with a PK == FK in the middle (obviously not specified)
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 33 - Main CD object created isa DBICTest::CD
ok 34 - Correct CD title
ok 35 - Artwork created isa DBICTest::Artwork
ok 36 - PK/FK present on artwork object
ok 37 - Correct artwork image count via the new object
ok 38 - Images named correctly in objects
ok 39 - Correct artwork image count via a new search
ok 40 - Images named correctly after search
# * Test might_have again but with just a PK and FK (neither specified) in the mid-table
ok 41 - Main track object created isa DBICTest::Track
ok 42 - Correct track title
ok 43 - Lyrics created isa DBICTest::Lyrics
ok 44 - PK present on lyric object
ok 45 - FK present on lyric object
ok 46 - Correct lyric versions count via the new object
ok 47 - Lyrics text in objects matches
ok 48 - Correct lyric versions count via a new search
ok 49 - Lyrics text via search matches
# * Test a multilevel might-have with a PK == FK in the might_have/has_many table
# 
# CD -> might have -> Artwork
#                        \
#                         \-> has_many \
#                                       --> Artwork_to_Artist
#                         /-> has_many /
#                        /
#                      Artist
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 50 - Main CD object created isa DBICTest::CD
ok 51 - Correct CD title
ok 52 - PK/FK present on artwork object
ok 53 - Correct artwork creator count via the new object
ok 54 - Artists named correctly when queried via object
ok 55 - Correct artwork creator count via a new search
ok 56 - Artists named correctly queried via a new search
# * Nested find_or_create
ok 57 - Created new artist with cds via find_or_create
# * Multiple same level has_many create
ok 58 - artist with duplicate rels inserted okay
# * First create_related pass
ok 59 - Got Good CD Class
ok 60 - Got Expected Title
ok 61 - Got Expected Tracks ResultSet
ok 62 - Got Expected Track Class
ok 63 - Got Expected Track Class
# * second create_related with same arguments
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 64 - Got Good CD Class
ok 65 - Got Expected Title
ok 66 - Liner notes
ok 67 - Got Expected Tracks ResultSet
ok 68 - Got Expected Track Class
ok 69 - Got Expected Track Class
# * create of parents of a record linker table
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'cd', 'producer'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 496
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 70 - join table record created ok
# * Create foreign key col obj including PK (See test 20 in 66relationships.t)
ok 71 - rel okay
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 72 - new id retained okay
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
finding by... (10) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 93.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 73 - new cd created without clash on related artist
# * Test multi create over many_to_many
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'producer'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 537
ok 74 - One CD row created via M2M create
ok 75 - CD row created with one producer
ok 76 - Correct producer row created
# * And the insane multicreate
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'producer'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 574
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
DBIx::Class::ResultSet::RecursiveUpdate::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'cd'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 574
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
finding by ... (11) at lib/DBIx/Class/ResultSet/RecursiveUpdate.pm line 108.
ok 77 - 4 new artists created
ok 78 - 2 additional genres created
ok 79 - 3 new producer
ok 80 - 7 new CDs
ok 81 - 10 new Tags
ok 82 - 7 greatest hits created
ok 83 - 5 CDs created in 2012
ok 84 - All 10 tags were pairwise distributed between 5 year-2012 CDs
ok 85 - Paul had 1 production
ok 86 - Paul had one co-producer
ok 87 - The second producer is flemming
ok 88 - Kirk had 3 CDs
ok 89 - Kirk had a producer only on one cd
ok 90 - Lars had 3 CDs
ok 91 - Lars always had a producer
ok 92 - Lars produced 1 CD with flemming
ok 93 - Lars produced 2 CDs with bob
ok 94 - Bob produced a total of 3 CDs
ok 95 - Bob produced james' only CD
ok 96 - got a good resultset
ok 97 - got cd to test
DBIx::Class::ResultSet::RecursiveUpdate::Functions::recursive_update(): NULL/undef values supplied for requested unique constraint 'primary' (NULL values in column(s): 'trackid'). This is almost certainly not what you wanted, though you can set DBIC_NULLABLE_KEY_NOWARN to disable this warning. at t/96multi_create.t line 827
ok 98 - Might have deleted
1..98
